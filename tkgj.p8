pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
--tkgmj2019

-- settings
player_speed = 0.12
stamina_drain = 0.3
base_time_to_spawn = 150
game_time_seconds = 45
--

-- consts
global_off_y = 16 -- hack to move every sprite down

--

team0 = nil
team1 = nil

t = 0
time_to_spawn = base_time_to_spawn

members_map = {}
for x=0,7 do
  members_map[x] = {}
end

function mk_team(num)
  local base_x = t0_table.x
  local base_y = t0_table.y

  if(num == 1) then
    base_x = t1_table.x
    base_y = t1_table.y
  end

  local t = {}
  t[1] = mk_team_member(num)
  members_map[base_x][base_y] = t[1]
  t[2] = mk_team_member(num)
  members_map[base_x + 1][base_y] = t[2]
  t[3] = mk_team_member(num)
  members_map[base_x][base_y + 1] = t[3]
  t[4] = mk_team_member(num)
  members_map[base_x + 1][base_y + 1] = t[4]
  return t
end

function mk_team_member(num)
  local mem = {}
  mem.t = 10 * flr(rnd(5))
  mem.team = num
  mem.needs = nil
  mem.stamina = 100 -- todo diversify
  return mem
end

all_items = {
  'tiger',
  'tiger',
  -- 'meat',
  'apple',
  'toast',
}

tile_w = 16
half_tile_w = tile_w / 2

function update_teams()
  for i=1,4 do
    update_team_member(team0[i])
    update_team_member(team1[i])
  end
end

function ceil(x)
  return -flr(-x)
end

function update_team_member(m)

  m.stamina = max(0, m.stamina - stamina_drain)
  if m.stamina == 0 and not m.needs then
    m.t = 10 * flr(rnd(5))
    m.needs = rand_elem(all_items)
  end
  m.t = m.t + 1
end

function update_game_progress()
  for i=1,4 do
    local m_t0 = team0[i]
    local m_t1 = team1[i]

    if m_t0.stamina > 0 then -- todo stun
      t0_progress = t0_progress + t0_efficiency
    end

    if m_t1.stamina > 0 then -- todo stun
      t1_progress = t1_progress + t1_efficiency
    end

  end

end

-- make an actor
-- and add to global collection
-- x,y means center of the actor
-- in map tiles (not pixels)
function make_actor(x, y)
  a={}
  a.x = x
  a.y = y
  a.dx = 0
  a.dy = 0
  a.spr = 16
  a.frame = 0
  a.t = 0
  a.facing = 'd'

  -- half-width and half-height
  -- slightly less than 0.5 so
  -- that will fit through 1-wide
  -- holes.
  a.w = 0.2
  a.h = 0.2

  add(actor,a)

  return a
end

function _init()

  winner = nil
  finish_t = 0

  dbg_enabled = false


  time_left = game_time_seconds * 30 -- * 30 because pico8 updates 30 times per second
  countdown_time = 3 * 30 + 10

  t0_progress = 0.1
  t1_progress = 0.1

  t0_efficiency = 0.05
  t1_efficiency = 0.05

  t0_table = {}
  t0_table.x = 5
  t0_table.y = 0

  t1_table = {}
  t1_table.x = 5
  t1_table.y = 5

  global_off_y = 16

  t = 0
  time_to_spawn = base_time_to_spawn

  items_spr = {}
  items_spr.box = 142
  items_spr.tiger = 202
  items_spr.apple = 206
  -- items_spr.meat = 204
  items_spr.toast = 200

  dbg = {}

  facing_map = {}
  facing_map.d = {0,1}
  facing_map.u = {0,-1}
  facing_map.l = {-1,0}
  facing_map.r = {1, 0}
  static_map = {}

  item_map = {}
  actor = {} --all actors in world
  for x=-1,8 do
    item_map[x] = {}
    static_map[x] = {}
    for y=-1,8 do
      item_map[x][y] = nil
      static_map[x][y] = nil
    end
  end

  item_map[3][0] = 'box'
  item_map[4][2] = 'box'
  item_map[2][3] = 'box'
  item_map[4][4] = 'box'
  item_map[3][6] = 'box'

  --item_map[1][3] = 'tiger'
  item_map[0][3] = 'tiger'
  item_map[1][0] = 'apple'
  item_map[1][6] = 'apple'
  item_map[0][0] = 'toast'
  item_map[0][6] = 'toast'

  static_map[0][0] = 'table'
  static_map[1][0] = 'table'
  static_map[0][3] = 'table'
  static_map[1][3] = 'table'
  static_map[1][6] = 'table'
  static_map[0][6] = 'table'
  static_map[3][1] = 'table'
  static_map[3][5] = 'table'
  static_map[4][3] = 'table'
  static_map[6][3] = 'table'

  static_map[t0_table.x + 0][t0_table.y + 0] = 'p0_team1'
  static_map[t0_table.x + 1][t0_table.y + 0] = 'p0_team2'
  static_map[t0_table.x + 0][t0_table.y + 1] = 'p0_team3'
  static_map[t0_table.x + 1][t0_table.y + 1] = 'p0_team4'

  static_map[t1_table.x + 0][t1_table.y + 0] = 'p1_team1'
  static_map[t1_table.x + 1][t1_table.y + 0] = 'p1_team2'
  static_map[t1_table.x + 0][t1_table.y + 1] = 'p1_team3'
  static_map[t1_table.x + 1][t1_table.y + 1] = 'p1_team4'

  -- make player top left
  state = 'title'
  pl0 = mk_player(0)
  pl1 = mk_player(1)
  team0 = mk_team(0)
  team1 = mk_team(1)

  team0[1].stamina = 70
  team0[2].stamina = 35
  team0[3].stamina = 50
  team0[4].stamina = 10

  team1[1].stamina = 50
  team1[2].stamina = 10
  team1[3].stamina = 70
  team1[4].stamina = 35



end



function mk_player(num)	-- num 0 or 1
  local pl = make_actor(5.5, 2.5 + num * 2)
  pl.spr = 96
  pl.pal = 11 + num
  pl.spritemap = {
    u = 40,
    d = 36,
    r = 32,
    l = 32,
  }
  pl.num = num

  return pl
end

-- for any given point on the
-- map, true if there is wall
-- there.

function solid(x, y) -- todo change from tiles to pixels

  -- grab the cell value
  val=mget(x * 2, y * 2)
  local item = item_map[flr(x)][flr(y)]
  local static = static_map[flr(x)][flr(y)]
  return item == 'box' or static

end

-- solid_area
-- check if a rectangle overlaps
-- with any walls

--(this version only works for
--actors less than one tile big)


function solid_area(x,y,w,h)
  return
  x-w < 0 or
  y-h < 0 or
  x+w > 8 or
  y+h > 7 or
  solid(x-w,y-h) or
  solid(x+w,y-h) or
  solid(x-w,y+h) or
  solid(x+w,y+h)

end

function move_actor(a)

  if not solid_area(a.x + a.dx, a.y, a.w, a.h) then
    a.x = a.x + a.dx
  end
  if not solid_area(a.x, a.y + a.dy, a.w, a.h) then
    a.y = a.y + a.dy
  end

  local facing_dir = facing_map[a.facing]
  a.target = {
    flr(a.x - a.w * -facing_dir[1]) + facing_dir[1],
    flr(a.y - a.h * -facing_dir[2]) + facing_dir[2],
  }
  if a.target[1] < 0 or a.target[1] > 7 or a.target[2] < 0 or a.target[2] > 6 then
    a.target = nil
  end

  local moving = a.dx ~= 0 or a.dy ~= 0
  if moving then
    a.frame = flr(a.t / 5) % 2
  end
  a.t = a.t + 1
end

function try_action(pl)
  if not pl.target then return end
  if not pl.item_held then
    try_pick(pl)
  else
    try_drop(pl)
  end
end

function try_pick(pl)
  local target_item = item_map[pl.target[1]][pl.target[2]]
  if target_item then
    pl.item_held = target_item
    item_map[pl.target[1]][pl.target[2]] = nil
    sfx(57)
  end
end

function try_drop(pl)
  local tar_x = pl.target[1]
  local tar_y = pl.target[2]
  local target_item = item_map[tar_x][tar_y]
  local target_static = static_map[tar_x][tar_y]


  if pl.item_held == 'box' and not target_item and not target_static then
    drop_box(pl)
  elseif pl.item_held ~= 'box' and pl.item_held and not target_item then -- carrying not box - put down on table
    if target_static == 'table' then -- put down
      item_map[tar_x][tar_y] = pl.item_held
      pl.item_held = nil
      sfx(57)
    elseif pl.item_held then -- todo feed item
      try_feed(pl)  -- todo attacking
      -- do nothing for now
    end
  end
end

function try_feed(pl)
  local member = members_map[pl.target[1]][pl.target[2]]
  if member and member.needs == pl.item_held then
    -- feed
    sfx(56)
    member.stamina = 100
    member.needs = nil
    pl.item_held = nil
  end
end


function drop_box(pl)
  local tar_x = pl.target[1]
  local tar_y = pl.target[2]

  -- drop for check only
  item_map[tar_x][tar_y] = pl.item_held
  pl.item_held = nil

  -- if collision with any player - revert
  local can_drop = not solid_area(pl0.x,pl0.y,pl0.w,pl0.h) and (not pl1 or not solid_area(pl1.x,pl1.y,pl1.w,pl1.h))
  if not can_drop then
    pl.item_held = item_map[tar_x][tar_y]
    item_map[tar_x][tar_y] = nil
  else
    sfx(57)

  end


end

function control_player(pl)
  local d_x = 0
  local d_y = 0
  if btn(0, pl.num) then
    d_x = d_x - player_speed
    pl.facing = 'l'
  end
  if btn(1, pl.num) then
    d_x = d_x + player_speed
    pl.facing = 'r'
  end
  if btn(2, pl.num) then
    d_y = d_y - player_speed
    pl.facing = 'u'
  end
  if btn(3, pl.num) then
    d_y = d_y + player_speed
    pl.facing = 'd'
  end
  if (btnp(4, pl.num)) try_action(pl)
  -- if (btnp(5, pl.num)) dbg_enabled = not dbg_enabled
  pl.dx = d_x
  pl.dy = d_y
end


function _update()
  if state == 'game' then
    update_game()
  end
  if state == 'countdown' then
    update_countdown()
  end

  if state == 'title' then
    update_title()
  end
  if state == 'finish' then
    update_finish()
  end
end

function update_finish()
  finish_t = finish_t + 1
  if (btnp(4,0) or btnp(4,1)) and finish_t > 30  then
    _init()
  end
end

function update_game()
  t = t + 1
  time_left = time_left - 1
  update_teams()
  control_player(pl0)
  if pl1 then control_player(pl1) end
  foreach(actor, move_actor)
  try_spawn()
  update_game_progress()
  if time_left % 30 == 0 and (time_left / 30) < 10 and time_left > 0 then
    sfx(8)
  end
  check_win()
end

function update_title()
  t = t + 1
  if btnp(4, 0) or btnp(4,1) then
    state = 'countdown'
    sfx(57)
  end
end

function update_countdown()
  countdown_time = countdown_time - 1
  if countdown_time % 30 == 0 then
    if countdown_time > 0 then
      sfx(8)
    else
      sfx(9)
      state = 'game'
    end
  end
end


cur_spawn = 0
spawn_order = {3,0,6,3}
function try_spawn()
  time_to_spawn = time_to_spawn - 1
  if time_to_spawn > 0 then return end

  spawn_row = spawn_order[1 + cur_spawn % 4]
  if not item_map[0][spawn_row] then
    item_map[0][spawn_row] = rand_elem(all_items)
    time_to_spawn = base_time_to_spawn
    cur_spawn = cur_spawn + 1
  elseif not item_map[1][spawn_row] then
    item_map[1][spawn_row] = rand_elem(all_items)
    time_to_spawn = base_time_to_spawn
  else
    time_to_spawn = base_time_to_spawn / 2
  end

  cur_spawn = cur_spawn + 1
end

function check_win()
  if time_left > 0 then return end

  sfx(9)
  state = 'finish'
  if t0_progress > t1_progress then
    winner = 0
  elseif t1_progress > t0_progress then
    winner = 1
  else
    winner = nil
  end

end

function outline(s,x,y,c1,c2)
  for i=0,2 do
    for j=0,2 do
      if not(i==1 and j==1) then
        print(s,x+i,y+j,c1)
      end
    end
  end
  print(s,x+1,y+1,c2)
end

function draw_actor(a)
  if(a.pal) pal(8, a.pal)
  local sx = (a.x * tile_w) - half_tile_w
  local sy = (a.y * tile_w) - half_tile_w
  local sp = a.spritemap[a.facing]
  sp = sp + (2 * a.frame)
  local flip_x = a.facing == 'r'

  local w = tile_w * a.w * 2
  local h = tile_w * a.h * 2

  spr(sp, sx, sy + global_off_y, 2,2, flip_x)

  pal(8,8)
  if a.item_held then
    local item_sp = items_spr[a.item_held]
    spr(item_sp, sx, sy - 8 + global_off_y, 2, 2)
  end
  -- rect(sx , sy, sx + w, sy + h, 11) -- todo naprawic box
end

function _draw()
  cls()
  draw_bg()

  if dbg_enabled then draw_tile_border() end

  draw_static()

  draw_items()
  foreach(actor, draw_actor)

  draw_targets()
  draw_emojis()
  if state == 'countdown' then draw_countdown() end
  draw_ui()
  if state == 'title' then draw_title() end
  if state == 'finish' then draw_finish() end
  if dbg_enabled then draw_dbg() end
end


function draw_finish()
  local t0_percent = 100 * (t0_progress / (t0_progress + t1_progress))
  local t1_percent = 100 - t0_percent
  local name = ''
  if winner == 0 then
    t0_percent = ceil(t0_percent)
    t1_percent = flr(t1_percent)
    pal(11,3)
    name = 'green'
  elseif winner == 1 then
    t0_percent = flr(t0_percent)
    t1_percent = ceil(t1_percent)
    pal(11,12)
    name = 'blue'
  else
    pal(11,1)
  end

  local margin_x = 30
  local margin_y = 45
  local h = 40
  rectfill(margin_x, margin_y, 127 - margin_x, margin_y + h, 1)
  rect(margin_x + 1, margin_y + 1, 127 - margin_x - 1, margin_y + h - 1, 7)
  local text = ''
  if winner then
    text = name..' team won'
  else
    text = 'draw!'
  end
  local len = #text
  local text_off = (128 - len*4)/2
  outline (text, text_off, margin_y + 8, 7, 11)

  pal(11,11)

  local off_y = 24

  local width = 128 - 2 * margin_x
  outline (t1_percent, margin_x + 14, margin_y + off_y, 7, 12)
  outline(':', margin_x + (width/2) - 2, margin_y + off_y, 7, 1)
  outline (t0_percent, 128 - margin_x - 14 - 8, margin_y + off_y, 7, 3)

end

t = 0
title_frames = {10,234}
function draw_title()
  cls()
  local frame = 1 + flr(t / 2) % 2
  local frame_sp = title_frames[frame]

  spr(frame_sp, 40, 20, 6, 2)


  -- draw_key('e', 40, 50, 3)
  local text = 'press n to continue'
  local len = #text
  local off_x = (128 - len * 4) / 2 -- center text
  outline(text, off_x, 80, 1, 7)
end

function draw_key(k, x, y, c)
  rect(x, y, x + 8, y + 8, c)
  print(k, x + 3,y + 2, c)
end

function draw_countdown()


  local r = countdown_time / 1

  -- for i = 1,r do
  -- circ(64,64, r - i, countdown_time % 16 + 1)
  -- end
  -- circ(64,64,r-0,1)
  -- circ(64,64,r-30,12)
  -- circ(64,64,r-60,11)
  -- circ(64,64,r-90,12)

  local off = 16 * 3 + 8
  local spr_idx = 192 + 2 * flr(countdown_time / 30)
  pal(5,1)
  spr(spr_idx, off, off, 2, 2)
  pal(5,5)
end

function draw_ui()
  --rectfill(0,0,128,15,13)
  local time_left_seconds = tostr(ceil((time_left - 1) / 30))
  local margin_x = 16
  local margin_y = 2
  local blue_ratio = t1_progress / (t1_progress + t0_progress)

  local bar_w = 127 - 2 * margin_x

  -- whithe highlight
  rect(margin_x, margin_y + 0, 127 - margin_x, margin_y + 0, 7)
  -- green bar
  rect(margin_x, margin_y + 1, 127 - margin_x, margin_y + 1, 11)
  rect(margin_x, margin_y + 2, 127 - margin_x, margin_y + 3, 3)

  -- blue bar
  rect(margin_x, margin_y + 1, margin_x + blue_ratio * bar_w, margin_y + 1, 12)
  rect(margin_x, margin_y + 2, margin_x + blue_ratio * bar_w, margin_y + 3, 1)


  rect(margin_x, margin_y, margin_x, margin_y + 3, 5)
  rect(127 - margin_x, margin_y, 127 - margin_x, margin_y + 3, 5)
  rect(margin_x, margin_y, margin_x, margin_y + 1, 6)
  rect(127 - margin_x, margin_y, 127 - margin_x, margin_y + 1, 6)

  local digits = #time_left_seconds
  local txt_off_x = 64 - (digits * 2)
  outline(time_left_seconds, txt_off_x, 8, 7,5)

  -- rectfill(5, 120, 62, 126,6)
  -- rect(5, 120, 62, 126,1)
  -- local percent_full = (t1_progress / 100)
  -- rectfill(6, 121, 6 + flr(57 * percent_full), 125, 12)

  -- rectfill(66, 120, 123, 126,6)
  -- rect(66, 120, 123, 126,3)
  -- local percent_full = (t0_progress / 100)
  -- rectfill(122 - flr(57 * percent_full), 121, 122, 125, 11)


end

floor_tiles = {4}--,5,20,21}
function draw_bg()
  --srand(1)
  for x=0,8 do
    for y=0,8 do
      local tile_idx = rand_elem(floor_tiles)
      spr(tile_idx, x * tile_w, y * tile_w + global_off_y, 2, 2)
    end
  end
  --srand(t)
end

function draw_static()
  draw_teams()
  for x=0,7 do
    for y=0,6 do
      local item = static_map[x][y]
      if item and item == 'table' then
        spr(2, x * tile_w, y * tile_w + global_off_y, 2, 2)
      end
    end
  end
end

function rand_elem(arr)
  return arr[ceil(rnd(#arr))]
end
regular_sprs = {64,72,64,68,64,64,64,68,64,68,64,64,72,68,64,64,64,76}
exhausted_spr = 128
winner_spr = 132

function draw_teams()
  pal(11,11)

  for i=1,4 do

    local bottom = i > 2
    local right = i == 2 or i == 4
    local spr_idx_off = to_num(bottom) * 32 + to_num(right) * 2

    local base_sp = regular_sprs[1 + flr(team0[i].t / 5) % #regular_sprs]
    if team0[i].stamina <= 0 then
      base_sp = 128
    end
    if winner == 0 then
      base_sp = winner_spr
    elseif winner == 1 then
      base_sp = exhausted_spr
    end
    local sp = base_sp + spr_idx_off
    spr(sp, (t0_table.x + to_num(right)) * tile_w, (t0_table.y + to_num(bottom)) * tile_w + global_off_y, 2, 2)
    pal(11,12)
    pal(3,1)


    local base_sp = regular_sprs[1 + flr(team1[i].t / 5) % #regular_sprs]
    if team1[i].stamina <= 0 then
      base_sp = 128
    end
    if winner == 1 then
      base_sp = winner_spr
    elseif winner == 0 then
      base_sp = exhausted_spr
    end
    local sp = base_sp + spr_idx_off

    spr(sp, (t1_table.x + to_num(right)) * tile_w, (t1_table.y + to_num(bottom)) * tile_w + global_off_y, 2, 2)

    pal(11,11)
    pal(3,3)

  end
end

function to_num(bool)
  return bool and 1 or 0
end

function draw_emojis()
  for i=1,4 do
    local t0_m = team0[i]
    local t1_m = team1[i]

    local top = flr((i - 1) / 2) == 0
    local left = i % 2 == 0

    local off_y = to_num(not top) * tile_w - 3
    local off_x = to_num(left) * (tile_w * 3 - 6) - tile_w + 3

    draw_need(t0_table.x * tile_w + off_x, t0_table.y * tile_w + off_y, t0_m.needs, left, t0_m.t)
    draw_need(t1_table.x * tile_w + off_x, t1_table.y * tile_w + off_y, t1_m.needs, left, t1_m.t)

  end

end

function draw_need(x, y, need, flip_x, t)
  local off_y = (t / 30) % 2
  if not need then return end
  spr(8, x, y + off_y + global_off_y, 2,2,flip_x)
  local need_sp = need_spr[need]
  spr(need_sp, x, y + off_y + global_off_y, 2,2)
end


need_spr = {}
need_spr.tiger  = 170
--need_spr.meat  = 166
need_spr.apple  = 174
need_spr.toast = 168

function draw_items()
  for tile_x,column in pairs(item_map) do

    -- todo reverse y for drawing would be cool
    for tile_y,item in pairs(column) do
      local off_y = -2
      if item == 'box' then off_y = 0 end
      if item and item ~= 'empty' then
        spr(items_spr[item], tile_x * tile_w, tile_y * tile_w + off_y + global_off_y, 2, 2)
      end
    end
  end
end

function draw_targets()
  if pl0.target then
    local x = pl0.target[1]
    local y = pl0.target[2]
    draw_cursor(x,y,11)
  end

  if pl1.target then
    local x = pl1.target[1]
    local y = pl1.target[2]
    draw_cursor(x,y,12)
  end
end

function draw_cursor(x,y, col)
  pal(12,col)
  spr(232, x * tile_w, y * tile_w + global_off_y, 1, 1, false, false)
  spr(232, x * tile_w + half_tile_w, y * tile_w + global_off_y, 1, 1, true, false)
  spr(232, x * tile_w, y * tile_w + half_tile_w + global_off_y, 1, 1, false, true)
  spr(232, x * tile_w + half_tile_w, y * tile_w + half_tile_w + global_off_y, 1, 1, true, true)
  pal(12,12)
end



function draw_tile_border()	-- todo camera
  for i=0,16 do
    line(0, i * tile_w, 128,i * tile_w,6)	-- horizontal
    line(i * tile_w, 0, i * tile_w,128,6)	-- vertical
  end
end

function draw_dbg()
  print("green: "..t0_progress,0,120,7)
  print("blue"..t1_progress,64,120,7)
  local ln= 0
  for k,v in pairs(dbg) do
    local txt=k.."="..v
    print(txt,2,32+ln*6,8)
    ln = ln + 1
  end
end

__gfx__
000000000000000024444444444444426666666666666666000000000000000000000000000000001c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c
00000000000000002444444444444442666666666666666d00000000000000000000000000000000c11111111111115511111111111111111111111111111111
00000000000000002444444444444442666666666666666d0000000000000000000055555555000011cc1cc1cc1bb1551bb177717771777771777111bbb1b11c
00000000000000002444444444444442666666666666666d00000000000000000005777777775000c1cc1cc1cc1bb1551bb171711171717171717111b111b111
000000000000000024444444444444426666666666666666000000000000000000577777777775001111111111111111111171717771717171777111bbb1b11c
00000000000000002444444444444442666666666666666600000000000000000057777777777500c5551cc1551bb1bb15517171717171117171111111b1b111
00000000000000002444444444444442666666666666666d0000000000000000005777777777750015551cc1551bb1bb155177717771711171777111bbb1b11c
00000000000000002444444444444442666666666666666d00000000000000000057777777777500c55511115511111111111171111111111111111111111111
00000000000000002444444444444442666666666666666d0000000000000000005777777777750015551cc1551bb1551bb177717177717777717111bbbbb11c
00000000000000002444444444444442666666666666666600000000000000000057777777777500c5551cc1551bb1551bb111117111717171711111b1b1b111
000000000000000024444444444444426666666666666666000000000000000000577777777775001555111155111155111111117177717171717111b1b1b11c
00000000000000002444444444444442666666666666666d00000000000000000057777777777500c5551cc1551bb1551bb111117171717111711111b111b111
00000000000000002444444444444442666666666666666d0000000000000000000577777777750015551cc1551bb1551bb177777177717111717111b111b11c
00000000000000002444444444444442666666666666666d00000000000000000000555555555750c55511115511115511111111111111111111111111111111
0000000000000000999999999999999966666666666666660000000000000000000000000000055015555555555555555551111111111111111111111111111c
000000000000000002222000000222206ddd66ddd66ddd6600000000000000000000000000000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
00555555555500000055555555550000000055555555000000005555555500000000555555550000000055555555000000000000000000000000000000000000
05449999994450000544999999445000000599999994500000059999999450000005999999945000000599999994500000000000000000000000000000000000
54999999999945005499999999994500005999999999450000599999999945000059999999994500005999999999450000000000000000000000000000000000
5499994949999450549999494999945005994994494f945005994994494f94500599999999999450059999999999945000000000000000000000000000000000
5444444449999945544444444999994505944444444f945005944444444f94500599999999999450059999999999945000000000000000000000000000000000
055f1fff49949945055f1fff499499455994ff1ff1ff49455994ff1ff1ff49455999999949999945599999994999994500000000000000000000000000000000
005f1fff49949945005f1fff49949945594fff1ff1fff945594fff1ff1fff9455999999499999945599999949999994500000000000000000000000000000000
005fffff49949945005fffff499499455994ffffffff49455994ffffffff49455999499499994945599949949999494500000000000000000000000000000000
0005efff494494500005efff4944945059994ffeeff4994559994ffeeff499455994999499994945599499949999494500000000000000000000000000000000
00000555494445000000055549444500059999555589995005999955558999500544994999994950054499499999495000000000000000000000000000000000
0000588844885000000058884488500005ff89888889ff5005ff89888889ff5005ff84444444ff5005ff84444444ff5000000000000000000000000000000000
0000588888885000000058888888500005f1888888881f5005f1888888881f5005f1888888881f5005f1888888881f5000000000000000000000000000000000
0000511ff11150000000511ff1115000051111111111115005111111111111500511111111111150051111111111115000000000000000000000000000000000
00005111111500000000511111122500005111111111150000511111111115000051111111111500005111111111150000000000000000000000000000000000
00000552225000000005222255225000000555555222500000052225555550000005555552225000000522255555500000000000000000000000000000000000
00000005550000000000555500550000000000000555000000005550000000000000000005550000000055500000000000000000000000000000000000000000
00000555555000000000555555000000000005555550000000005555550000000000055555500000055555555500000000000555555000000000555555000000
00005111111500000005444444500000000051111115000000054444445000000000511111150000054444444455000000005111111500000005444444500000
00051111111150000054444444450000000511111111500000544444444500000005111111115000544444444444500000051111111150000054444444450000
00511111115115000544444444445000055111111151155005444444444450000051111111511500544444444444150000511111115115000544444444445000
05111ffffff511500544ffffff4415505ff11ffffff51ff50544ffffff44155005111ffffff515000544fffff444145005111ffffff511500544ffffff441550
5111ff1ff1ff1150054ffdffdff414455ff1ffffffff1ff5054ffdffdff414450511ffffffff1500005fdfffff4454450511f55ff55f1150054ffffffff41445
511fff1ff1fff15005fffdffdfff54455bbff11ff11ffbb505fffdffdfff5445051fff1ff1fff500005fdffffff45545051fff1ff1fff15005ffddffddff5445
0511ffffffff1150004ffffffff455455bb1ffffffff1bb5004ffffffff455450511ff1ff1ff1500005ffffffff455450511fffeefff1150004ffffffff45545
00511ffeeff115000055ffeeff55005005bb1ffeeff1bb500055ffeeff55005000511ffffff155000555effff444554505511ffeeff115500055ffeeff555050
05bbbb5555bbbb505bbbbbbbbbbbb00005bbbb5555bbbb505bbbbbbbbbbbb00005bbbb5555bbbb505bbbbbbbbbbbb5505fbbbb5555bbbbf55bbbbbbbbbbbb500
05f5555555555f555ff3bbbbbb3ff50005b5555555555b505ff3bbbbbb3ff50005bff555555ffb505ff3bbbbbb3ff5005fb5555555555bf55bff3bbbbb3fb500
05f5666666665f555ff3bbbbbb3ff50005b5666666665b505ff3bbbbbb3ff50005bff566665ffb505ff3bbbbbb3ff50005356666666653555bfff3bbbbffb500
05556666766655555ff55555555ff50005556666766655555ff5555555555500055556667665555555555555555ff5000555666676665555555fff555fffb500
05d5666766665ddd555777777775575005d5666766665ddd555777777777775005d5666766665ddd577777777775575005d5666766665ddd5775ff77fff55750
5dd5666666665ddd57575757575757555dd5666666665ddd57575757575757555dd5666666665ddd57575757575757555dd5666666665ddd5757575757575755
5dd5666666665ddd57575757575757555dd5666666665ddd57575757575757555dd5666666665ddd57575757575757555dd5666666665ddd5757575757575755
5dd5555555555dddd5555555555555d55dd5555555555dddd5555555555555d55dddd5555555555d55555555555555d55dd5555555555ddd55555555555555d5
5dd5444444445dddddd5aaaaaaa45dd55dd5444444445dddddd5aaaaaaa45dd55ddd5444444444455dd5aaaaaaa45dd55dd5444444445ddd5dd5aaaaaaa45dd5
5d544444444445dddd5aaaaaaaaa45d55d54444444c445dddd5aaaaaaaaa45d55dd54444444444445d5aaaaaaaaa45d55d544444444445dd5d5aaaaaaaaa45d5
554444444444445dd5aaaaaaaaaaa455554444444ccc445dd5aaaaaaaaaaa4555d5444444444444455aaaaaaaaaaa455554444444444445d55aaaaaaaaaaa455
554444444444445dd5aaaaaaaaaaa45555444444ccc7c45dd5aaaaaaaaaaa455554444444f44444455aaaaaaaaaaa455554444444444445d55aaaaaaaaaaa455
54444444444444455aaaaaaa4aaaaa4554444444ccc7c4455aaa4aaaa4aaaa45554444444fff1f555aa4aaaa4aaaaa4554444444444444455aaaa4aaaaaaaa45
54444444444444455aaaaaa4aaaaaa4554444444cc7cc4455aa4aaaaa4aaaa455544444444fe1f505aa4aaaa4aaaaa4554444444444444455aaa4aaaaaaaaa45
55b44444444444b55aaa4aa4aaaa4a4555b444444ccc44b55a4aaaaaa4aaaa455544444444ffff505aa4aaaa4aaaaa4555b44444444444b55aa4aaaaa4aaaa45
55bbb4444444bbb55aa4aaa4aaaa4a4555bbb4444444bbb554aaaaaa4aaaaa4555b44444bbbbbb5054aa4aaaa4aaaa4555bbb4444444bbb5544aaaaa4aaaaa45
55bbbbbbbbbbbb566544aa4aaaaa4a5555bbbbbbbbbbbb566544aaa4aaaa4a5555bbbbbbbbbbbb506544a4aaaa4a4a5555bbbbbbbbbbbb566544aaa4aaaa4a55
05ffbbbbbbbbff5665ffb4444444ff5005bbbbbbbbbbbb5665bbb4444444bb5005bbbbbbbbbbbb5065bbb4444444bb5005ffbbbbbbbbff5665bbb4444444bb50
05f3bbbbbbbb3f5555f3bbbbbbbb3f500553bbbbbbbb3350055bbbbbbbbbb5500553bbbbbbbb3350055bbbbbbbbbb55005f3bbbbbbbb3f50055bbbbbbbbbb550
05333333333333500533333333333350053333333333335005333333333333500533333333333350053333333333335005333333333333500533333333333350
00533333333335000053333333333500005333333333350000533333333335000053333333333500005333333333350000533333333335000053333333333500
00511155511150000005111551115500005111555111500000511155511155000051115551115000005111555111500000511155511150000051115551115000
00055500055500000000555005550000000555000555000000055500055555000005550005550000000555000555000000055500055500000005550005550000
00000555555000000000555555000000000005555550000000005555550000000000000000000000000000000000000000000000000000000000000000000000
00005111111500000055444444500000000051111115000000054444445000000000011111111000000000000000000000000000000000000111111111111110
00051111111150000554444444450000000511111111500000544444444500000001111555155100000000000000000000000000000000000144444444444410
00511111115115000544444444445000055111111151155055444444444450000001115555155100000000000000000000000000000000000142222222222410
05111ffffff511500544ffffff4415505ff11ffffff51ff5ff44ffffff4455000001115555155100000000000000000000000000000000000149444444222410
5111ffffffff1150054ffffffff414455ff1f1ffff1f1ff5ff4ffdffdff4ff500001111555555100000000000000000000000000000000000149442222442410
511ff1f1f1f1f15005ff1f1f1f1f54455bbf1f1ff1f1fbb5bbfffdffdfffff500000111444111000000000000000000000000000000000000149994444442410
0511f111f111f150004f111f111f55455bb1ffffffff1bb5bb4feffffef4bb500000001444100000000000000000000000000000000000000149999999999410
00511fffefff15000055fffefff5005005bb1ffeeff1bb50bb55ffeeff55bb500000001444100000000000000000000000000000000000000144444444444410
05bbbb5555bbbb505bbbbbbbbbbbb00005bbbb5555bbbb505bbbbbbbbbbbb5000000001444100000000000000000000000000000000000000111111111111110
05f5555555555f555ff3bbbbbb3ff50005b5555555555b5053bbbbbbbbbb35000000001444100000000000000000000000000000000000000144444444444410
05f5666666665f555ff3bbbbbb3ff50005b5666666665b50053bbbbbbbbb35000000001444100000000000000000000000000000000000000149222222222410
05556666766655555ff55555555ff500055566667666555555555555555555000000001444100000000000000000000000000000000000000149999999999410
05d5666766665ddd555777777775575005d5666766665ddd55577777777777500000001444100000000000000000000000000000000000000144444444444410
5dd5666666665ddd57575757575757555dd5666666665ddd57575757575757550000000111000000000000000000000000000000000000000111111111111110
5dd5666666665ddd57575757575757555dd5666666665ddd57575757575757550000000000000000000000000000000000000000000000000000000000000000
5dd5555555555dddd5555555555555d55dd5555555555dddd5555555555555d50000000000000000000000000000000000000000000000000000000000000000
5dd1d1d1dddddddddd1d1d1dddddddd55dd5444444445dddddd5aaaaaaa45dd50000000000000000000000000000000000000000000000000000000000000000
5dd1515155555ddddd1515155555ddd55d544444444445dddd5aaaaaaaaa45d50000000000000000000000000000000000000000000000000000000000000000
5d514141444445dddd1a1a1aaaaa4dd5554444444444445dd5aaaaaaaaaaa4550000000000000000000000000000000000000000000000000000000000000000
554141414444445dd51a1a1aaaaaa4d5554444444444445dd5aaaaaaaaaaa4550000000000000000000000555500000000000000000000000000000033000000
54414141444444455a1a1a1a4aaaaa455ff4444444444ff55aaa4aaaa4aaaa450000044444400000000000111100000000000000a00000000000000330000000
54414141444444455a1a1a14aaaaaa455ff4444444444ff55aa4aaaaa4aaaa450000499999940000000000816100000000000000aa0000000000000500000000
55b44144444444b55aaa1aa4aaaa4a455bb4444444444bb55a4aaaaaa4aaaa450000099999900000000000816100000000000000aa000000000000b5b0000000
55bbb4444444bbb55aa4aaa4aaaa4a455bbbb4444444bbb554aaaaaa4aaaaa4500000999999000000000008111000000000000009aa0000000000b555b000000
55bbbbbbbbbbbb566544aa4aaaaa4a5555bbbbbbbbbbbb566544aaa4aaaa4a5500000999999000000000008161000000000000009aa000000000033bbb000000
05ffbbbbbbbbff5665ffb4444444ff5005bbbbbbbbbbbb5665bbb4444444bb5000000999999000000000001111000000000000009aa000000000033bbb000000
05f3bbbbbbbb3f5005f3bbbbbbbb3f500553bbbbbbbb3350055bbbbbbbbbb5500000044444400000000000555500000000000000aa00000000000033b0000000
0533333333333350053333333333335005333333333333500533333333333350000000000000000000000000000000000000000aaa0000000000000000000000
00533333333335000053333333333500005333333333350000533333333335000000000000000000000000000000000000000009000000000000000000000000
00511155511150000005111551115000005111555111500000511155511155000000000000000000000000000000000000000000000000000000000000000000
00055500055500000000555005550000000555000555000000055500055555000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000005500000000000005555000000000000555550000000000000000000000000000000000000000007777770000000000000000000000000000000000000
00000056750000000000056677500000000005666775000000000000000000000007777777777000000076666667000000000007700000000000000077770000
00000566750000000000566677750000000056666775500000000000000000000077444444447700000071111117000000000007970000000000000733370000
000056667500000000056655577750000005665557775000000000000000000000749999999947000000711116170000000000079a7000000000007333700000
000566667500000000056500057750000000550005775000000000000000000000799999999997000000718166170000000000079a7000000000007337000000
00005556750000000000500005775000000000000577500000000000000000000077999999997700000071811617000000000079aaa700000000007577000000
00000056750000000000000057750000000000005775000000000000000000000007999999997000000071811117000000000079aaa70000000007b5bb700000
00000056750000000000000577500000000000056775000000000000000000000007999999997000000071816617000000000079aaa7000000007b555bb70000
00000056750000000000005677500000000000005577500000000000000000000007999999997000000071811117000000000079aa9700000007bbbbbbb70000
00000056750000000000056675000000000055000577500000000000000000000007999999997000000071816617000000000079aa9700000007b33bbbb70000
00000056750000000000566655550000000566555777500000000000000000000007999999997000000071111117000000000079aa9700000007b33bbbb70000
0000005675000000000566657777500000005666677500000000000000000000000744444444700000007666666700000000079aa97000000007b33bbbb70000
00000056750000000005666677775000000005666775000000000000000000000007777777777000000007777770000000007aaaa700000000007b33bb700000
00000005500000000000555555550000000000555550000000000000000000000000000000000000000000000000000000079a77700000000000007777000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000077700000000000000000000000000
00555555555500000000555555550000000055555555000000000111111000007cc0000000000000c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1
0544999999445000000599999994500000059999999450000000156666510000c00000000000000011111111111111551111111111111111111111111111111c
5499999999994500005999999999450000599999999945000001656666561000c000000000000000c1cc1cc1cc1bb1551bb177717771777771777111bbb1b111
549999494999945005994994494f945005999999999994500016656666566100000000000000000011cc1cc1cc1bb1551bb171711171717171717111b111b11c
544444444999994505944444444f9450059999999999945000166555555661000000000000000000c111111111111111111171717771717171777111bbb1b111
055f1fff499499455994ff1ff1ff494559999999499999450016666666666100000000000000000015551cc1551bb1bb15517171717171117171111111b1b11c
005f1fff49949945594fff1ff1fff945599999949999994500155555555551000000000000000000c5551cc1551bb1bb155177717771711171777111bbb1b111
5555ffff499499455994ffffffff494559994994999949450017777666666100000000000000000015551111551111111111117111111111111111111111111c
7775efff4944945055554ffeeff49945599499949999494500017777766610000000000000000000c5551cc1551bb1551bb177717177717777717111bbbbb111
5555088849444500777599555589995015449949999949500001777777661000000000000000000015551cc1551bb1551bb111117111717171711111b1b1b11c
555544ff444850005555898888898850158884444444885000017777766610000000000000000000c555111155111155111111117177717171717111b1b1b111
555544ff4448500055554444ff481f5015118888888811500001777777661000000000000000000015551cc1551bb1551bb111117171717111711111b111b11c
15515111111150005555ff44ff411150151111111111115000017777766610000000000000000000c5551cc1551bb1551bb177777177717111717111b111b111
11115111111225001551ff444441150000511111111115000000177777610000000000000000000015551111551111551111111111111111111111111111111c
11115222552250001111555552225000000555555222500000001777766100000000000000000000c55555555555555555511111111111111111111111111111
000055550055000011110000055500000000000005550000000001111110000000000000000000001c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c1c
__gff__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101000000000000000000000000010101010000000000000000000000000101010100000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011200000000013655130651306513065130651306513065130651306513065130651016510165101651016510165101651016510165101651016510165101651016510165101651376513765137651376513765
002500001c7051c7051f7051f7051f7051c7551c7051c7051f7051f7051c7051a7051c705217051d7051c7051a765187651c70521705000001c70500000000000000000000187050000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
012400001575000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
012400002175000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000003775000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000101500b150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000002315015150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001a15000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001f1501b150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00100000317502f7502a7501e70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
011000001d0451d0451d045000001d0450000021045000001f0451d0451c045000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000400000a3200f330143201c2000a3200f3301132000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500000e050130501700018200150001a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000001175000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0010000007450064500a4000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000375001700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000e000017750197501b7501370017700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__music__
00 01424344

